networks:
  jarvis-proxy:
    external: true

services:
  traefik:
    image: traefik:v2.10.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80" # HTTP -> redirect to HTTPS
      - "443:443" # HTTPS -> main traffic
    volumes:
      # Docket socket -> Detect containers
      - /var/run/docker.sock:/var/run/docker.sock
      # Traefik config, mount read-only
      - ./traefik:/etc/traefik:ro
      # Logs 
      - ./logs/traefik:/var/log/traefik
    environment:
      # Cloudflare credentials for DNS challenge
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN}
    labels:
      - "traefik.enable=true"
      # Dashboard routing
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.${DOMAIN}`)"
      - "traefik.http.routers.dashboard.service=api@internal" # Internal API service
      - "traefik.http.routers.dashboard.middlewares=auth" # Protect with auth
      - "traefik.http.routers.dashboard.tls.certresolver=cloudflare" # Auto SSL with Cloudflare
      # Basic auth middleware definition
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_DASHBOARD_USER}:${TRAEFIK_DASHBOARD_PASSWORD_HASH}"
    networks:
      - jarvis-proxy

  whoami:
    image: traefik/whoami
    container_name: whoami
    restart: unless-stopped
    labels:
      - "traefik.enable=true" # Enable Traefik discovery
      - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)"
      - "traefik.http.routers.whoami.tls.certresolver=cloudflare"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
    networks:
      - jarvis-proxy